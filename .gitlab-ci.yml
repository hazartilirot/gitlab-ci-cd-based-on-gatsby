image: node:16.13.1-alpine

stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables: 
  STAGING_DOMAIN: carrotcabbage-staging.surge.sh
  PRODUCTION_DOMAIN: carrotcabbage.surge.sh

build website:
  stage: build
  #only:
  #  - main
  #  - merge_requests
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - npm install --silent
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths: 
      - ./public

test artifact:
  stage: test
  image: alpine
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test
  script:
    - npm install --silent
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - apk --no-cache add curl
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy review:
  stage: deploy review
  only:
    - merge_requests
  script:
    - npm install --silent
    - npm install -g gatsby-cli
    - gatsby build
    - npm install --global surge
    - surge --project ./public --domain carrotcabbage-$CI_ENVIRONMENT_SLUG.surge.sh
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://carrotcabbage-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: destroy review
  artifacts:
    paths:
      - ./public

destroy review:
  stage: destroy review
  variables: 
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown carrotcabbage-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

deploy staging:
  stage: deploy staging
  environment:
    name: staging
    url: https://$STAGING_DOMAIN
  only:
    - main #(only main branch since it's deployment)
  script:
    - npm install --global surge
    - surge --project ./public --domain $STAGING_DOMAIN

deploy production:
  stage: deploy production
  environment:
    name: production
    url: https://$PRODUCTION_DOMAIN
  # when: manual # the stage would be waiting for a manual execution
  # allow_failure: false # the option would postpone the rest stages
  only:
    - main #(only main branch since it's deployment)
  script:
    - npm install --global surge
    - surge --project ./public --domain $PRODUCTION_DOMAIN

production tests:
  image: alpine
  stage: production tests
  only:
    - main #(only main branch since it's deployment)
  script:
    - apk add --no-cache curl
    - curl -s "https://carrotcabbage.surge.sh" | grep -q "Hi people"
    - curl -s "https://carrotcabbage.surge.sh" | grep -q "$CI_COMMIT_SHORT_SHA"